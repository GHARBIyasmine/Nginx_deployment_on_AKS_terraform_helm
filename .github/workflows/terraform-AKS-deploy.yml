name: 'AKS Deployment & NGINX Deployment using Helm'

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Authenticate to Azure
      uses: azure/login@v1.4.6
      with: 
         creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      working-directory: terraform
      run: terraform init
           
    - name: Terraform Format
      working-directory: terraform
      run: terraform fmt

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan 

    - name: Terraform Apply 
      working-directory: terraform
      run: terraform apply -auto-approve

    - name: Get Terraform Outputs
      id: terraform_outputs
      run: |
        terraform output -json > terraform_outputs.json
        export RESOURCE_GROUP=$(jq -r .resource_group_name.value terraform_outputs.json)
        export AKS_CLUSTER=$(jq -r .aks_cluster_name.value terraform_outputs.json)
        echo "RESOURCE_GROUP=${RESOURCE_GROUP}"
        echo "AKS_CLUSTER=${AKS_CLUSTER}"
        echo "::set-output name=resource_group::${RESOURCE_GROUP}"
        echo "::set-output name=aks_cluster::${AKS_CLUSTER}"
        

  helm-deployment:
    name: 'NGINX Helm Deployment'
    runs-on: ubuntu-latest
    needs: terraform  # Ensure Terraform job completes before Helm deployment

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Get AKS Credentials
      run: |
          az aks get-credentials --resource-group ${{ needs.terraform.outputs.resource_group }} --name ${{ needs.terraform.outputs.aks_cluster }}

    - name: Install Helm
      uses: azure/setup-helm@v1

    - name: Deploy Nginx using Helm
      run: |
          helm upgrade --install nginx-release ./nginx-test
